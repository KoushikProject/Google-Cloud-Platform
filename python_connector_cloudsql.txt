'''
Installations required -
pip install cloud-sql-python-connector["pymysql"] SQLAlchemy
pip install google-cloud-secret-manager
pip install mysql-connector-python
'''
#Import required dependencies
import mysql.connector

# Function to get CloudSQL instance password from Secret Manager
def access_secret_version(project_id, secret_id, version_id='latest'):
    """
    Access the payload for the given secret version if one exists. The version
    can be a version number as a string (e.g. "5") or an alias (e.g. "latest").
    """

    # Import the Secret Manager client library.
    from google.cloud import secretmanager

    # Create the Secret Manager client.
    client = secretmanager.SecretManagerServiceClient()

    # Build the resource name of the secret version.
    name = f"projects/{project_id}/secrets/{secret_id}/versions/{version_id}"

    # Access the secret version.
    response = client.access_secret_version(request={"name": name})
    # Print the secret payload.
    # snippet is showing how to access the secret material.
    payload = response.payload.data.decode("UTF-8")
    return payload

# Function call to get DB password ino a local varaiable  
db_password = access_secret_version('hidden-mapper-414810', 'mysql_db_secret')


conn = mysql.connector.connect(
            user='root',
            password=db_password,
            host="104.196.0.65",
            database='sample'
    )


cursor = conn.cursor()


# Create Table
sqlquery = "select * from sample.sample_tbl"
cursor.execute(sqlquery)

# Fetch and print the results
results = cursor.fetchall()
for row in results:
    print(row)

# Insert data into Table
insert_query = "INSERT INTO sample.basic_dtls (idn, name) VALUES (%s, %s)"
data = (400, 'man')

cursor.execute(insert_query, data)

# Commit the changes to the database
conn.commit()

cursor.execute("SELECT * from sample.basic_dtls")
# query database
result = cursor.fetchall()

# Do something with the results
for row in result:
    print(row)

# Dropping Table
cursor.execute("DROP TABLE basic_dtls")